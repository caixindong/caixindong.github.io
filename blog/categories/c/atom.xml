<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: C | Cool Guy]]></title>
  <link href="http://caixindong.github.io/blog/categories/c/atom.xml" rel="self"/>
  <link href="http://caixindong.github.io/"/>
  <updated>2016-02-26T17:50:48+08:00</updated>
  <id>http://caixindong.github.io/</id>
  <author>
    <name><![CDATA[Xindong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[整形与字符串互转]]></title>
    <link href="http://caixindong.github.io/blog/2016/02/26/ios65/"/>
    <updated>2016-02-26T17:37:00+08:00</updated>
    <id>http://caixindong.github.io/blog/2016/02/26/ios65</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>C提供了把字符串转化为整形数的函数atoi()和把整形数转化为字符串的函数itoa()</p>

<h4>itoa()函数的原型为： char <em>itoa( int value, char </em>string,int radix);</h4>

<p>itoa()函数有3个参数：第一个参数是要转换的数字，第二个参数是要写入转换结果的目标字符串，第三个参数是转换数字时所用的基数。在例中，转换基数为10。10：十进制&hellip;&hellip;</p>

<h4>itoa并不是一个标准的C函数，它是Windows特有的，如果要写跨平台的程序，请用sprintf。</h4>

<p>是Windows平台下扩展的，标准库中有sprintf，功能比这个更强，用法跟printf类似：</p>

<p>char str[255];
sprintf(str, &ldquo;%x&rdquo;, 100); //将100转为16进制表示的字符串。</p>

<h4>atoi()函数的原型为：int atoi(const char * string)</h4>

<p>atoi()函数有1个参数，就是源字符串，返回值为转化结果</p>

<h2>实现自己的itoa()和atoi()</h2>

<pre><code class="C++">#include &lt;iostream&gt;
#include &lt;math.h&gt;
using namespace std;


/**
 * string 转化为 int
 **/
int Atoi(const char* string){
    size_t wei = strlen(string);
    int num = 0;
    for (int i=0; i&lt;wei; i++) {
        num = num*10+(string[i]-'0');
    }
    return num;
}

/**
 * 计算位数
 **/
int wei(int num,int radix){
    int count = 0;
    while (num&gt;0) {
        num = num/radix;
        count++;
    }
    return count;
}


/**
 * int 转化为 string
 * num 待转化的数字
 * str 写入转化结果的目标字符串
 * radix 转换数字时所用的基数（进制）
 **/
void Itoa(int num,char str[],int radix){
    int size = wei(num,radix);
    memset(str, '\0', size);
    int a = pow(radix, size-1);
    int tmp  =num;
    for (int i=0; i&lt;size; i++) {
        str[i] = tmp/a%radix+'0';
        a = a/radix;
    }
}



int main(int argc, const char * argv[]) {

    //cout&lt;&lt;Atoi("1234")&lt;&lt;endl;

    char str[1000];
    Itoa(90, str,10);
    printf("%s\n",str);
    char str2[1000];
    sprintf(str2, "%d",10);
    printf("%s\n",str2);

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
