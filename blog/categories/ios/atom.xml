<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ios | Cool Guy]]></title>
  <link href="http://caixindong.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://caixindong.github.io/"/>
  <updated>2015-10-04T00:56:31+08:00</updated>
  <id>http://caixindong.github.io/</id>
  <author>
    <name><![CDATA[Xindong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ios tableView]]></title>
    <link href="http://caixindong.github.io/blog/2015/10/04/ios2/"/>
    <updated>2015-10-04T00:51:03+08:00</updated>
    <id>http://caixindong.github.io/blog/2015/10/04/ios2</id>
    <content type="html"><![CDATA[<h1>ios tableView 的header for section无法加载的问题</h1>

<p>最近在练习的一个项目遇到重写header不加载的问题，在这里提醒下大家，重写的header要被调用，一定要重写delegate的height for header的方法才会被调用</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ios Oc知识点]]></title>
    <link href="http://caixindong.github.io/blog/2015/10/04/ios1/"/>
    <updated>2015-10-04T00:46:33+08:00</updated>
    <id>http://caixindong.github.io/blog/2015/10/04/ios1</id>
    <content type="html"><![CDATA[<h1>oc知识点</h1>

<p>1、类的设计</p>

<p>@property （nonatomic ，strong）NSString* __(NSString用strong，跟oc有关的夜用strong)</p>

<p>@property （nonatomic ，assign）int age (其他用assign)</p>

<p>2、封装</p>

<p>3、继承</p>

<p>4、重写</p>

<p>5、self指针（类似java的this）</p>

<p>6、类别（区别于继承）</p>

<p>相同目的：都是无法满足需求，需要更新属性或方法拓展</p>

<p>不同点：继承即能拓展成员变量，成员属性，也能够添加方法；类别，只能添加方法</p>

<p>继承添加的新方法新属性，都是在子类对象中调用，而类别添加的新方法可以在原类对象直接调用</p>

<p>7、内存管理（mrc模式和arc模式）</p>

<p>8、代理（delegate委托，类似java的接口）</p>

<p>9、copy（浅拷贝和深拷贝）</p>

<p>浅拷贝还是指向原来的内存空间，而深拷贝则另外开辟新的空间</p>

<p>10、单例设计模式（全局变量）</p>

<p>遇到多线程时要加锁@synchronized（self）｛</p>

<p>｝</p>

<p>只执行一次可以加上dispatch_once(&hellip;,&hellip;.)</p>

<p>11、通知中心设计模式（broadcost）</p>

<p>一般用单例实现广播栈</p>

<p>NSNotificationCenter</p>

<p>12、block（代码块）</p>

<p>int(^myblock) = ^(int a,int b){</p>

<p>};
myblock(3,5);</p>
]]></content>
  </entry>
  
</feed>
