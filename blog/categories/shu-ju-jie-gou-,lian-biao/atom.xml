<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 数据结构，链表 | Cool Guy]]></title>
  <link href="http://caixindong.github.io/blog/categories/shu-ju-jie-gou-,lian-biao/atom.xml" rel="self"/>
  <link href="http://caixindong.github.io/"/>
  <updated>2016-05-15T16:25:56+08:00</updated>
  <id>http://caixindong.github.io/</id>
  <author>
    <name><![CDATA[Xindong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[反转链表]]></title>
    <link href="http://caixindong.github.io/blog/2016/03/04/ios71/"/>
    <updated>2016-03-04T21:31:59+08:00</updated>
    <id>http://caixindong.github.io/blog/2016/03/04/ios71</id>
    <content type="html"><![CDATA[<h2>要求</h2>

<p>将一个链表反转，例如：1->2->3->4-NULL  反转后为  4->3->2->1->NULL</p>

<h2>代码实现</h2>

<pre><code class="C++">
#include &lt;iostream&gt;
using namespace::std;
struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {

    }
};
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        //记得判断
        if (head==NULL||head-&gt;next==NULL) {
            return head;
        }

        //翻转链表固定模式
        ListNode* pre = head;
        ListNode* p = head-&gt;next;
        ListNode* next  = NULL;
        while (p!=NULL) {
            next = p-&gt;next;
            p-&gt;next = pre;
            pre = p;
            p = next;
        }
        head-&gt;next = NULL;
        return pre;
    }
};
int main(int argc, const char * argv[]) {
    // insert code here...
    std::cout &lt;&lt; "Hello, World!\n";
    return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
