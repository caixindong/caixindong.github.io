<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Cool Guy]]></title>
  <link href="http://caixindong.github.io/atom.xml" rel="self"/>
  <link href="http://caixindong.github.io/"/>
  <updated>2015-10-04T00:56:31+08:00</updated>
  <id>http://caixindong.github.io/</id>
  <author>
    <name><![CDATA[Xindong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ios tableView]]></title>
    <link href="http://caixindong.github.io/blog/2015/10/04/ios2/"/>
    <updated>2015-10-04T00:51:03+08:00</updated>
    <id>http://caixindong.github.io/blog/2015/10/04/ios2</id>
    <content type="html"><![CDATA[<h1>ios tableView 的header for section无法加载的问题</h1>

<p>最近在练习的一个项目遇到重写header不加载的问题，在这里提醒下大家，重写的header要被调用，一定要重写delegate的height for header的方法才会被调用</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ios Oc知识点]]></title>
    <link href="http://caixindong.github.io/blog/2015/10/04/ios1/"/>
    <updated>2015-10-04T00:46:33+08:00</updated>
    <id>http://caixindong.github.io/blog/2015/10/04/ios1</id>
    <content type="html"><![CDATA[<h1>oc知识点</h1>

<p>1、类的设计</p>

<p>@property （nonatomic ，strong）NSString* __(NSString用strong，跟oc有关的夜用strong)</p>

<p>@property （nonatomic ，assign）int age (其他用assign)</p>

<p>2、封装</p>

<p>3、继承</p>

<p>4、重写</p>

<p>5、self指针（类似java的this）</p>

<p>6、类别（区别于继承）</p>

<p>相同目的：都是无法满足需求，需要更新属性或方法拓展</p>

<p>不同点：继承即能拓展成员变量，成员属性，也能够添加方法；类别，只能添加方法</p>

<p>继承添加的新方法新属性，都是在子类对象中调用，而类别添加的新方法可以在原类对象直接调用</p>

<p>7、内存管理（mrc模式和arc模式）</p>

<p>8、代理（delegate委托，类似java的接口）</p>

<p>9、copy（浅拷贝和深拷贝）</p>

<p>浅拷贝还是指向原来的内存空间，而深拷贝则另外开辟新的空间</p>

<p>10、单例设计模式（全局变量）</p>

<p>遇到多线程时要加锁@synchronized（self）｛</p>

<p>｝</p>

<p>只执行一次可以加上dispatch_once(&hellip;,&hellip;.)</p>

<p>11、通知中心设计模式（broadcost）</p>

<p>一般用单例实现广播栈</p>

<p>NSNotificationCenter</p>

<p>12、block（代码块）</p>

<p>int(^myblock) = ^(int a,int b){</p>

<p>};
myblock(3,5);</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git 运用技巧]]></title>
    <link href="http://caixindong.github.io/blog/2015/10/03/git/"/>
    <updated>2015-10-03T23:37:39+08:00</updated>
    <id>http://caixindong.github.io/blog/2015/10/03/git</id>
    <content type="html"><![CDATA[<h1>git 运用技巧</h1>

<p>最新在学ios开发，正在练习一些实战项目，今天学到一些git的运用技巧，来这里和大家分享下</p>

<p>（1）git配置
git config &ndash;global user.name &ldquo;&hellip;&hellip;.&rdquo;
git config &ndash;global user.email &ldquo;&hellip;&hellip;..&rdquo;</p>

<p>（2）下载代码
git clone <a href="http://git.oschina.net/bbycnzi/newreader">http://git.oschina.net/bbycnzi/newreader</a>(github代码的下载地址)</p>

<p>（3）添加文件
cd newsreader(文件夹)
git add code.md(文件名)
git add</p>

<p>（4）本地提交
git commit -am &ldquo;提交测试代码&rdquo;</p>

<p>（5）将提交推送到服务器
git push origin master</p>

<p>（6）更新本地代码
git pull</p>

<p>（7）创建分支
分支相当于你项目的一个副本，一般修改项目得先在分支修改再整合到原项目中
git branch v2</p>

<p>（8）将分支同步到服务器
git push origin v2</p>

<p>（9）切换分支
git checkout v2</p>

<p>（10）修改v2分支，提交本地修改
git commit -am &ldquo;v2修改&rdquo;</p>

<p>（11）将提交推送到服务器
git push origin v2</p>

<p>（12）将v2分支合并到主干上
git checkout master
git merge v2
git push</p>

<p>（13）版本还原
git checkout v2</p>

<p>git revert HEAD
填写描述信息</p>

<p>查看本地内容是否修改</p>

<p>git push origin v2
还原到指定版本</p>

<p>ps:vim命令：
i 插入
esc-> shift+: ->:wq  保存退出</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello]]></title>
    <link href="http://caixindong.github.io/blog/2015/10/03/hello/"/>
    <updated>2015-10-03T23:23:29+08:00</updated>
    <id>http://caixindong.github.io/blog/2015/10/03/hello</id>
    <content type="html"><![CDATA[<h1>Hello world</h1>
]]></content>
  </entry>
  
</feed>
